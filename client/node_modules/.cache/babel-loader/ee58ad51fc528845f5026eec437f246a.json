{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Backend-main\\\\client\\\\src\\\\scenes\\\\widgets\\\\PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length ? posts.map(_ref2 => {\n      let {\n        _id,\n        userId,\n        firstName,\n        lastName,\n        description,\n        location,\n        picturePath,\n        userPicturePath,\n        likes,\n        comments\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(PostWidget, {\n        postId: _id,\n        postUserId: userId,\n        name: `${firstName} ${lastName}`,\n        description: description,\n        location: location,\n        picturePath: picturePath,\n        userPicturePath: userPicturePath,\n        likes: likes,\n        comments: comments\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    }) : null\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","_ref","_s","userId","isProfile","dispatch","posts","state","token","getPosts","response","fetch","process","env","REACT_APP_SERVER_URL","method","headers","Authorization","data","json","getUserPosts","children","length","map","_ref2","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postId","postUserId","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MERN-Backend-main/client/src/scenes/widgets/PostsWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPosts } from \"state\";\r\nimport PostWidget from \"./PostWidget\";\r\n\r\nconst PostsWidget = ({ userId, isProfile = false }) => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts);\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const getPosts = async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/posts`, {\r\n        method: \"GET\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      dispatch(setPosts({ posts: data }));\r\n  };\r\n\r\n  const getUserPosts = async () => {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/${userId}/posts`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch(setPosts({ posts: data }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isProfile) {\r\n      getUserPosts();\r\n    } else {\r\n      getPosts();\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      {posts.length ? posts.map(\r\n        ({\r\n          _id,\r\n          userId,\r\n          firstName,\r\n          lastName,\r\n          description,\r\n          location,\r\n          picturePath,\r\n          userPicturePath,\r\n          likes,\r\n          comments,\r\n        }) => (\r\n          <PostWidget\r\n            key={_id}\r\n            postId={_id}\r\n            postUserId={userId}\r\n            name={`${firstName} ${lastName}`}\r\n            description={description}\r\n            location={location}\r\n            picturePath={picturePath}\r\n            userPicturePath={userPicturePath}\r\n            likes={likes}\r\n            comments={comments}\r\n          />\r\n        )\r\n      ):null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsWidget;"],"mappings":"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"},"metadata":{},"sourceType":"module"}