{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Backend-main\\\\client\\\\src\\\\scenes\\\\loginPage\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme, InputAdornment } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\n// import FileBase from \"react-file-base64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\").matches(/^(?=.*[!@#$%^&*(),.?\":{}|<>])(?=.*[A-Z]).{8,}$/, \"Password must contain at least one special character, one uppercase letter, and be at least 8 characters long\"),\n  location: yup.string().required(\"required\"),\n  occupation: yup.string().required(\"required\"),\n  picture: yup.string().required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst Form = () => {\n  _s();\n  const [pageType, setPageType] = useState(\"login\");\n  const [image, setImage] = useState(\"\");\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const register = async (values, onSubmitProps) => {\n    // this allows us to send form info with image\n    const formData = new FormData();\n    for (let value in values) {\n      formData.append(value, values[value]);\n    }\n    if (image) {\n      const base64 = await convertTobase64(image);\n      formData.append(\"picturePath\", base64);\n    }\n    try {\n      const savedUserResponse = await fetch(`${process.env.REACT_APP_SERVER_URL}/auth/register`, {\n        method: \"POST\",\n        body: formData\n      });\n      const savedUser = await savedUserResponse.json();\n      if (savedUser.error && savedUser.error.includes(\"duplicate key\")) {\n        // Handle the case where the email already exists\n        alert(\"User with this email already exists. Please login or use a different email.\");\n      } else {\n        onSubmitProps.resetForm();\n        if (savedUser) {\n          setPageType(\"login\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error registering user:\", error);\n      // Handle other errors here\n    }\n  };\n  const convertTobase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n  const login = async (values, onSubmitProps) => {\n    try {\n      const loggedInResponse = await fetch(`${process.env.REACT_APP_SERVER_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n      const loggedIn = await loggedInResponse.json();\n      if (loggedIn.error) {\n        // Handle login errors\n        if (loggedIn.error === \"User not registered\") {\n          alert(\"User is not registered. Please sign up or use a different email.\");\n        } else if (loggedIn.error === \"Incorrect password\") {\n          alert(\"Incorrect password. Please check your password and try again.\");\n        } else {\n          // Handle other login errors\n          alert(\"An error occurred during login. Please try again later.\");\n        }\n      } else if (loggedIn.token) {\n        dispatch(setLogin({\n          user: loggedIn.user,\n          token: loggedIn.token\n        }));\n        navigate(\"/home\");\n      }\n      onSubmitProps.resetForm();\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      // Handle other errors here\n    }\n  };\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    if (isLogin) await login(values, onSubmitProps);\n    if (isRegister) await register(values, onSubmitProps);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"grid\",\n          gap: \"30px\",\n          gridTemplateColumns: \"repeat(4, minmax(0, 1fr))\",\n          sx: {\n            \"& > div\": {\n              gridColumn: isNonMobile ? undefined : \"span 4\"\n            }\n          },\n          children: [isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              name: \"firstName\",\n              error: Boolean(touched.firstName) && Boolean(errors.firstName),\n              helperText: touched.firstName && errors.firstName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              name: \"lastName\",\n              error: Boolean(touched.lastName) && Boolean(errors.lastName),\n              helperText: touched.lastName && errors.lastName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Location\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.location,\n              name: \"location\",\n              error: Boolean(touched.location) && Boolean(errors.location),\n              helperText: touched.location && errors.location,\n              sx: {\n                gridColumn: \"span 4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Occupation\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.occupation,\n              name: \"occupation\",\n              error: Boolean(touched.occupation) && Boolean(errors.occupation),\n              helperText: touched.occupation && errors.occupation,\n              sx: {\n                gridColumn: \"span 4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              gridColumn: \"span 4\",\n              border: `1px solid ${palette.neutral.medium}`,\n              borderRadius: \"5px\",\n              p: \"1rem\",\n              children: /*#__PURE__*/_jsxDEV(Dropzone, {\n                acceptedFiles: \".jpg,.jpeg,.png\",\n                multiple: false,\n                onDrop: acceptedFiles => {\n                  setFieldValue(\"picture\", acceptedFiles[0]);\n                  setImage(acceptedFiles[0]);\n                },\n                children: _ref2 => {\n                  let {\n                    getRootProps,\n                    getInputProps\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    ...getRootProps(),\n                    border: `2px dashed ${palette.primary.main}`,\n                    p: \"1rem\",\n                    sx: {\n                      \"&:hover\": {\n                        cursor: \"pointer\"\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      ...getInputProps()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, this), !values.picture ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Add Picture Here (Max Size = 50KBs)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(FlexBetween, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        children: values.picture.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.email,\n            name: \"email\",\n            error: Boolean(touched.email) && Boolean(errors.email),\n            helperText: touched.email && errors.email,\n            sx: {\n              gridColumn: \"span 4\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: isPasswordVisible ? \"text\" : \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.password,\n            name: \"password\",\n            error: Boolean(touched.password) && Boolean(errors.password),\n            helperText: touched.password && (errors.password ? errors.password : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Password must contain at least one special character, one uppercase letter, and be at least 8 characters long\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)),\n            sx: {\n              gridColumn: \"span 4\"\n            },\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: isPasswordVisible ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                  onClick: () => setIsPasswordVisible(!isPasswordVisible),\n                  sx: {\n                    cursor: \"pointer\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                  onClick: () => setIsPasswordVisible(!isPasswordVisible),\n                  sx: {\n                    cursor: \"pointer\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            sx: {\n              m: \"2rem 0\",\n              p: \"1rem\",\n              backgroundColor: palette.primary.main,\n              color: palette.background.alt,\n              \"&:hover\": {\n                color: palette.primary.main\n              }\n            },\n            children: isLogin ? \"LOGIN\" : \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => {\n              setPageType(isLogin ? \"register\" : \"login\");\n              resetForm();\n            },\n            sx: {\n              textDecoration: \"underline\",\n              color: palette.primary.main,\n              \"&:hover\": {\n                cursor: \"pointer\",\n                color: palette.primary.light\n              }\n            },\n            children: isLogin ? \"Don't have an account? Sign Up here.\" : \"Already have an account? Login here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"94ijHEpz9YsFBfW2wcFdzMKhGZ8=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","InputAdornment","EditOutlinedIcon","VisibilityOffIcon","VisibilityIcon","Formik","yup","useNavigate","useDispatch","setLogin","Dropzone","FlexBetween","jsxDEV","_jsxDEV","Fragment","_Fragment","registerSchema","object","shape","firstName","string","required","lastName","email","password","matches","location","occupation","picture","loginSchema","initialValuesRegister","initialValuesLogin","Form","_s","pageType","setPageType","image","setImage","isPasswordVisible","setIsPasswordVisible","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","register","values","onSubmitProps","formData","FormData","value","append","base64","convertTobase64","savedUserResponse","fetch","process","env","REACT_APP_SERVER_URL","method","body","savedUser","json","error","includes","alert","resetForm","console","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","login","loggedInResponse","headers","JSON","stringify","loggedIn","token","user","handleFormSubmit","onSubmit","initialValues","validationSchema","children","_ref","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","display","gap","gridTemplateColumns","sx","gridColumn","undefined","label","onBlur","onChange","name","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","border","neutral","medium","borderRadius","p","acceptedFiles","multiple","onDrop","_ref2","getRootProps","getInputProps","primary","main","cursor","type","variant","color","InputProps","endAdornment","position","onClick","fullWidth","m","backgroundColor","background","alt","textDecoration","light","_c","$RefreshReg$"],"sources":["E:/MERN-Backend-main/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  useMediaQuery,\r\n  Typography,\r\n  useTheme,\r\n  InputAdornment\r\n} from \"@mui/material\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"state\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport FlexBetween from \"components/FlexBetween\";\r\n// import FileBase from \"react-file-base64\";\r\n\r\nconst registerSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"required\"),\r\n  lastName: yup.string().required(\"required\"),\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\").matches(\r\n    /^(?=.*[!@#$%^&*(),.?\":{}|<>])(?=.*[A-Z]).{8,}$/,\r\n    \"Password must contain at least one special character, one uppercase letter, and be at least 8 characters long\"\r\n  ),\r\n  location: yup.string().required(\"required\"),\r\n  occupation: yup.string().required(\"required\"),\r\n  picture: yup.string().required(\"required\"),\r\n});\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\"),\r\n});\r\n\r\nconst initialValuesRegister = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  location: \"\",\r\n  occupation: \"\",\r\n  picture: \"\",\r\n};\r\n\r\nconst initialValuesLogin = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Form = () => {\r\n  const [pageType, setPageType] = useState(\"login\");\r\n  const [image , setImage] = useState(\"\");\r\n  const [isPasswordVisible , setIsPasswordVisible] = useState(false);\r\n  const { palette } = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const isLogin = pageType === \"login\";\r\n  const isRegister = pageType === \"register\";\r\n\r\n  const register = async (values, onSubmitProps) => {\r\n    // this allows us to send form info with image\r\n    const formData = new FormData();\r\n    for (let value in values) {\r\n      formData.append(value, values[value]);\r\n    }\r\n    if (image) {\r\n      const base64 = await convertTobase64(image);\r\n      formData.append(\"picturePath\", base64);\r\n    }\r\n  \r\n    try {\r\n      const savedUserResponse = await fetch(\r\n        `${process.env.REACT_APP_SERVER_URL}/auth/register`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      const savedUser = await savedUserResponse.json();\r\n  \r\n      if (savedUser.error && savedUser.error.includes(\"duplicate key\")) {\r\n        // Handle the case where the email already exists\r\n        alert(\"User with this email already exists. Please login or use a different email.\");\r\n      } else {\r\n        onSubmitProps.resetForm();\r\n        if (savedUser) {\r\n          setPageType(\"login\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering user:\", error);\r\n      // Handle other errors here\r\n    }\r\n  };  \r\n\r\n  const convertTobase64 = (file) => {\r\n    return new Promise((resolve, reject)=>{\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    })\r\n  };\r\n\r\n  const login = async (values, onSubmitProps) => {\r\n    try {\r\n      const loggedInResponse = await fetch(\r\n        `${process.env.REACT_APP_SERVER_URL}/auth/login`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(values),\r\n        }\r\n      );\r\n      const loggedIn = await loggedInResponse.json();\r\n  \r\n      if (loggedIn.error) {\r\n        // Handle login errors\r\n        if (loggedIn.error === \"User not registered\") {\r\n          alert(\"User is not registered. Please sign up or use a different email.\");\r\n        } else if (loggedIn.error === \"Incorrect password\") {\r\n          alert(\"Incorrect password. Please check your password and try again.\");\r\n        } else {\r\n          // Handle other login errors\r\n          alert(\"An error occurred during login. Please try again later.\");\r\n        }\r\n      } else if (loggedIn.token) {\r\n        dispatch(\r\n          setLogin({\r\n            user: loggedIn.user,\r\n            token: loggedIn.token,\r\n          })\r\n        );\r\n        navigate(\"/home\");\r\n      }\r\n      onSubmitProps.resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      // Handle other errors here\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    if (isLogin) await login(values, onSubmitProps);\r\n    if (isRegister) await register(values, onSubmitProps);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleFormSubmit}\r\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\r\n      validationSchema={isLogin ? loginSchema : registerSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        resetForm,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n          >\r\n            {isRegister && (\r\n              <>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  name=\"firstName\"\r\n                  error={\r\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\r\n                  }\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  name=\"lastName\"\r\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Location\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.location}\r\n                  name=\"location\"\r\n                  error={Boolean(touched.location) && Boolean(errors.location)}\r\n                  helperText={touched.location && errors.location}\r\n                  sx={{ gridColumn: \"span 4\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Occupation\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.occupation}\r\n                  name=\"occupation\"\r\n                  error={\r\n                    Boolean(touched.occupation) && Boolean(errors.occupation)\r\n                  }\r\n                  helperText={touched.occupation && errors.occupation}\r\n                  sx={{ gridColumn: \"span 4\" }}\r\n                />\r\n                <Box\r\n                  gridColumn=\"span 4\"\r\n                  border={`1px solid ${palette.neutral.medium}`}\r\n                  borderRadius=\"5px\"\r\n                  p=\"1rem\"\r\n                >\r\n                  <Dropzone\r\n                    acceptedFiles=\".jpg,.jpeg,.png\"\r\n                    multiple={false}\r\n                    onDrop={(acceptedFiles) =>{\r\n                      setFieldValue(\"picture\", acceptedFiles[0]);\r\n                      setImage(acceptedFiles[0]);\r\n                    }\r\n                    }\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <Box\r\n                        {...getRootProps()}\r\n                        border={`2px dashed ${palette.primary.main}`}\r\n                        p=\"1rem\"\r\n                        sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                      >\r\n                        <input {...getInputProps()} />\r\n                        {!values.picture ? (\r\n                          <p>Add Picture Here (Max Size = 50KBs)</p>\r\n                        ) : (\r\n                          <FlexBetween>\r\n                            <Typography>{values.picture.name}</Typography>\r\n                            <EditOutlinedIcon />\r\n                          </FlexBetween>\r\n                        )}\r\n                      </Box>\r\n                    )}\r\n                  </Dropzone>\r\n                  {/* <FileBase type=\"file\" multiple={false} onDone={({base64})=>setImage(base64)} /> */}\r\n                </Box>\r\n              </>\r\n            )}\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name=\"email\"\r\n              error={Boolean(touched.email) && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n\r\n<TextField\r\n            label=\"Password\"\r\n            type={isPasswordVisible ? \"text\" : \"password\"}\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            name=\"password\"\r\n            error={Boolean(touched.password) && Boolean(errors.password)}\r\n            helperText={\r\n              touched.password &&\r\n              (errors.password ? (\r\n                errors.password\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Password must contain at least one special character, one\r\n                  uppercase letter, and be at least 8 characters long\r\n                </Typography>\r\n              ))\r\n            }\r\n            sx={{ gridColumn: \"span 4\" }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {isPasswordVisible ? (\r\n                    <VisibilityIcon\r\n                      onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n                      sx={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n                      sx={{ cursor: \"pointer\" }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            />      \r\n            \r\n          </Box>\r\n\r\n          {/* BUTTONS */}\r\n          <Box>\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              sx={{\r\n                m: \"2rem 0\",\r\n                p: \"1rem\",\r\n                backgroundColor: palette.primary.main,\r\n                color: palette.background.alt,\r\n                \"&:hover\": { color: palette.primary.main },\r\n              }}\r\n            >\r\n              {isLogin ? \"LOGIN\" : \"REGISTER\"}\r\n            </Button>\r\n            <Typography\r\n              onClick={() => {\r\n                setPageType(isLogin ? \"register\" : \"login\");\r\n                resetForm();\r\n              }}\r\n              sx={{\r\n                textDecoration: \"underline\",\r\n                color: palette.primary.main,\r\n                \"&:hover\": {\r\n                  cursor: \"pointer\",\r\n                  color: palette.primary.light,\r\n                },\r\n              }}\r\n            >\r\n              {isLogin\r\n                ? \"Don't have an account? Sign Up here.\"\r\n                : \"Already have an account? Login here.\"}\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}